
require 'spec_helper'
require 'json'

# Unit tests for ConnectWise::AuthAnvilsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'AuthAnvilsApi' do
  before do
    # run before each test
    @instance = ConnectWise::AuthAnvilsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AuthAnvilsApi' do
    it 'should create an instance of AuthAnvilsApi' do
      expect(@instance).to be_instance_of(ConnectWise::AuthAnvilsApi)
    end
  end

  # unit tests for system_auth_anvils_count_get
  # 
  # Get Auth Anvil Count
  # @param [Hash] opts the optional parameters
  # @option opts [String] :conditions 
  # @return [Count]
  describe 'system_auth_anvils_count_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for system_auth_anvils_get
  # 
  # Get Auth Anvils
  # @param [Hash] opts the optional parameters
  # @option opts [String] :conditions 
  # @option opts [String] :order_by 
  # @option opts [String] :childconditions 
  # @option opts [String] :customfieldconditions 
  # @option opts [Integer] :page 
  # @option opts [Integer] :page_size 
  # @return [Array<AuthAnvil>]
  describe 'system_auth_anvils_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for system_auth_anvils_id_get
  # 
  # Get Auth Anvil By Id
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [AuthAnvil]
  describe 'system_auth_anvils_id_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for system_auth_anvils_id_patch
  # 
  # Update Auth Anvil
  # @param id 
  # @param operations 
  # @param [Hash] opts the optional parameters
  # @return [AuthAnvil]
  describe 'system_auth_anvils_id_patch test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for system_auth_anvils_id_put
  # 
  # Replace Auth Anvil
  # @param id 
  # @param auth_anvil 
  # @param [Hash] opts the optional parameters
  # @return [AuthAnvil]
  describe 'system_auth_anvils_id_put test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for system_auth_anvils_test_connection_get
  # 
  # Validate Auth Anvil Url Connectivity
  # @param [Hash] opts the optional parameters
  # @return [SuccessResponse]
  describe 'system_auth_anvils_test_connection_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
