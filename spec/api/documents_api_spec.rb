
require 'spec_helper'
require 'json'

# Unit tests for ConnectWise::DocumentsApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
RSpec.describe 'DocumentsApi' do
  before do
    # run before each test
    @instance = ConnectWise::DocumentsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DocumentsApi' do
    it 'should create an instance of DocumentsApi' do
      expect(@instance).to be_instance_of(ConnectWise::DocumentsApi)
    end
  end

  # unit tests for system_documents_count_get
  #
  # Get Documents Info Count
  # @param [Hash] opts the optional parameters
  # @option opts [String] :record_type
  # @option opts [Integer] :record_id
  # @return [Count]
  describe 'system_documents_count_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for system_documents_get
  #
  # Get Documents Info
  # @param [Hash] opts the optional parameters
  # @option opts [String] :record_type
  # @option opts [Integer] :record_id
  # @option opts [Integer] :page
  # @option opts [Integer] :page_size
  # @return [Array<DocumentInfo>]
  describe 'system_documents_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for system_documents_id_delete
  #
  # Delete Document Info By Id
  # @param id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'system_documents_id_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for system_documents_id_download_get
  #
  # Download Document
  # @param id
  # @param [Hash] opts the optional parameters
  # @option opts [String] :last_modified
  # @return [nil]
  describe 'system_documents_id_download_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for system_documents_id_get
  #
  # Get Document Info By Id
  # @param id
  # @param [Hash] opts the optional parameters
  # @return [DocumentInfo]
  describe 'system_documents_id_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for system_documents_id_post
  #
  # Update Document By Id
  # @param id
  # @param record_id Entity id
  # @param record_type Entity type
  # @param title Document title
  # @param url Document url
  # @param [Hash] opts the optional parameters
  # @option opts [File] :file File to upload
  # @option opts [BOOLEAN] :private_flag Indicates if document is private
  # @option opts [BOOLEAN] :read_only_flag Indicates if document is readonly
  # @option opts [BOOLEAN] :is_avatar Indicates if document contains an avatar
  # @return [DocumentInfo]
  describe 'system_documents_id_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for system_documents_post
  #
  # Insert Document
  # @param record_type Entity type
  # @param title Document title
  # @param url Document url
  # @param [Hash] opts the optional parameters
  # @option opts [File] :file File to upload
  # @option opts [Integer] :record_id Entity id
  # @option opts [BOOLEAN] :private_flag Indicates if document is private
  # @option opts [BOOLEAN] :read_only_flag Indicates if document is readonly
  # @option opts [BOOLEAN] :is_avatar Indicates if document contains an avatar
  # @return [DocumentInfo]
  describe 'system_documents_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for system_documents_uploadsample_get
  #
  # Get Upload Sample Page
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'system_documents_uploadsample_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
