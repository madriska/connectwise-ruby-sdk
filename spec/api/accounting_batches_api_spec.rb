
require 'spec_helper'
require 'json'

# Unit tests for ConnectWise::AccountingBatchesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'AccountingBatchesApi' do
  before do
    # run before each test
    @instance = ConnectWise::AccountingBatchesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AccountingBatchesApi' do
    it 'should create an instance of AccountingBatchesApi' do
      expect(@instance).to be_instance_of(ConnectWise::AccountingBatchesApi)
    end
  end

  # unit tests for finance_accounting_batches_count_get
  # 
  # Get Batches Count
  # @param [Hash] opts the optional parameters
  # @option opts [String] :conditions 
  # @return [Count]
  describe 'finance_accounting_batches_count_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for finance_accounting_batches_get
  # 
  # Get Batches
  # @param [Hash] opts the optional parameters
  # @option opts [String] :conditions 
  # @option opts [String] :order_by 
  # @option opts [String] :childconditions 
  # @option opts [String] :customfieldconditions 
  # @option opts [Integer] :page 
  # @option opts [Integer] :page_size 
  # @return [Array<AccountingBatch>]
  describe 'finance_accounting_batches_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for finance_accounting_batches_id_delete
  # 
  # Delete Batch By Id
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'finance_accounting_batches_id_delete test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for finance_accounting_batches_id_export_post
  # 
  # Re-export the payload data from an existing batch (RecreateBatch in SOAP)
  # @param id 
  # @param batch_export_parameters 
  # @param [Hash] opts the optional parameters
  # @return [GLExport]
  describe 'finance_accounting_batches_id_export_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for finance_accounting_batches_id_get
  # 
  # Get Batch By Id
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [AccountingBatch]
  describe 'finance_accounting_batches_id_get test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for finance_accounting_batches_post
  # 
  # Creates the Accounting Batch and updates GL Records (UpdateBatch in SOAP)
  # @param accounting_batch_parameters 
  # @param [Hash] opts the optional parameters
  # @return [GLExport]
  describe 'finance_accounting_batches_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for finance_accounting_export_post
  # 
  # Exports accouting batch payload based on parameters (CreateBatch in SOAP)
  # @param batch_export_parameters 
  # @param [Hash] opts the optional parameters
  # @return [GLExport]
  describe 'finance_accounting_export_post test' do
    it "should work" do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
